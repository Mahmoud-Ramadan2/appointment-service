spring.application.name=${SPRING_APPLICATION_NAME}
server.port=${SERVER_PORT}

# Eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.instance.preferIpAddress=${EUREKA_INSTANCE_PREFERIPADDRESS}
# eureka.instance.instance-id=${EUREKA_INSTANCE_INSTANCE_ID}

# Kafka
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.key-serializer=${KAFKA_PRODUCER_KEY_SERIALIZER}
spring.kafka.producer.value-serializer=${KAFKA_PRODUCER_VALUE_SERIALIZER}
spring.kafka.consumer.key-deserializer=${KAFKA_CONSUMER_KEY_DESERIALIZER}
spring.kafka.consumer.value-deserializer=${KAFKA_CONSUMER_VALUE_DESERIALIZER}
# Ensures message durability by requiring acknowledgment from all replicas before considering a message committed.
spring.kafka.producer.acks=all
# retry on failure
spring.kafka.producer.retries=3
# JWT
JWTSecretKey=${JWT_SECRET_KEY}

# Database
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}

# Logging
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}

spring.profiles.active=${SPRING_PROFILES_ACTIVE}
